module Jeera.Abs where

-- Haskell module generated by the BNF converter


newtype Ident = Ident String deriving (Eq,Ord,Show)
data Program =
   Program [Statement]
  deriving (Eq,Ord,Show)

data Statement =
   DeviceDecl DeviceDecl
  deriving (Eq,Ord,Show)

data DeviceDecl =
   SimpleDevice InstanceName SimpleDeviceType [DeviceStatement]
  deriving (Eq,Ord,Show)

data SimpleDeviceType =
   Resistor
 | Inductor
  deriving (Eq,Ord,Show)

data DeviceStatement =
   DeviceStatement LHSExpression RHSExpression
  deriving (Eq,Ord,Show)

data LHSExpression =
   LHSExpression Ident
  deriving (Eq,Ord,Show)

data RHSExpression =
   RHSExpressionInteger Integer
 | RHSExpressionDouble Double
  deriving (Eq,Ord,Show)

data InstanceName =
   InstanceName Ident
  deriving (Eq,Ord,Show)

