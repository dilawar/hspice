module Jeera.Abs where

-- Haskell module generated by the BNF converter


newtype Ident = Ident String deriving (Eq,Ord,Show)
data Design =
   Design [DeviceDecl]
  deriving (Eq,Ord,Show)

data DeviceDecl =
   DeviceDecl InstanceName DeviceType [Assignment]
  deriving (Eq,Ord,Show)

data DeviceType =
   DeviceType_Resistor
 | DeviceType_Capacitor
 | DeviceType_Inductance
 | DeviceType_Voltage
  deriving (Eq,Ord,Show)

data InstanceName =
   InstanceName Ident
  deriving (Eq,Ord,Show)

data Assignment =
   Assignment Ident Rvalue
  deriving (Eq,Ord,Show)

data Rvalue =
   RvalueIdent Ident
 | RvalueDouble Double
 | RvalueInteger Integer
  deriving (Eq,Ord,Show)

