{- This is BNF grammar -}
entrypoints Program;
Program. Program ::= [Statement];
terminator nonempty Statement ";";

DeviceDecl. Statement ::= DeviceDecl;
-- Connection. Statement ::= Connection;

-- Declare device
SimpleDevice. DeviceDecl ::= InstanceName "=" SimpleDeviceType "{" [DeviceStatement] "}";
TwoPortDevice. DeviceDecl ::= InstanceName "=" "Device" "{" [DeviceStatement] "}";

-- Device types
Resistor. SimpleDeviceType ::= "Resistor";
Inductor. SimpleDeviceType ::= "Inductor";
Capacitor. SimpleDeviceType ::= "Capacitor";

-- Device statement
DeviceStatement. DeviceStatement ::= LHSExpression "=" RHSExpression;
terminator nonempty DeviceStatement ";";

rules LHSExpression ::= "value"
                    | "input"
                    | "output"
                    | Ident 
                    ;

rules RHSExpression ::= SimpleExpression | Expression;

ExpressionDouble. SimpleExpression ::= Double;
ExpressionInteger. SimpleExpression ::= Integer;


PortExpr. Expression ::= PortExpression;
MathExpr. Expression ::= MathExpression;

PortExpression. PortExpression ::= "(" PortName "," PortName ")";

rules MathExpression ::=  Expression  "*" Expression 
        | Expression "+" Expression 
        | Expression "/" Expression 
        | Expression "-" Expression
        | "(" MathExpression ")"
        | Ident
        ;


-- Instance name 
InstanceName. InstanceName ::= Ident;

-- Port name
rules PortName ::= Ident | Integer;

-- Declare connections



-- comments 
comment "//";
comment "/*" "*/";
